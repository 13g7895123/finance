services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      - NUXT_API_BASE_URL=${NUXT_API_BASE_URL}
      - NUXT_SECRET_KEY=${NUXT_SECRET_KEY}
    depends_on:
      - backend
    networks:
      - crm-network
      - npm_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:8000"
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - LINE_BOT_CHANNEL_ACCESS_TOKEN=${LINE_BOT_CHANNEL_ACCESS_TOKEN}
      - LINE_BOT_CHANNEL_SECRET=${LINE_BOT_CHANNEL_SECRET}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
    volumes:
      - backend_storage:/var/www/html/storage
      - backend_bootstrap_cache:/var/www/html/bootstrap/cache
    depends_on:
      - mysql
      - redis
    networks:
      - crm-network
      - npm_network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    ports:
      - "${DATABASE_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password_2024
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - crm-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - crm-network
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=root_password_2024
    depends_on:
      - mysql
    networks:
      - crm-network
      - npm_network
    restart: unless-stopped

networks:
  crm-network:
    driver: bridge
  npm_network:
    external: true

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_storage:
    driver: local
  backend_bootstrap_cache:
    driver: local
